           <h1>Interactions with Security Principles</h1><br>
            <p>Although Data Aggregation is an efficient way to minimize sensors energy consumption, it raises new security challenges. Indeed, any sensor node communication, i.e. data transmission, must be encrypted and authenticated to ensure a certain level of security requested by Wireless Sensor Networks in general. The interactions between WSN security requirements and Data Aggregation are the following:</p>
            <h2>Interaction on data confidentiality</h2><p> As detailed in <a href="principles.html">Security Principles</a>, data confidentially is extremely important in the light of sensitive information WSNs are prone to transmit. The standard approach for secreting data is key encryption. Then, the aggregation protocol can occur in two different ways regarding the type of encryption used by the network:
                <ul>
                    <li><h3>Hop to hop encryption:</h3><p> In this case, sensor nodes encrypt the data such that aggregator nodes can decrypt it. Thus, to process information, each node aggregator first has to decrypt the collected data, aggregate it, and then has to encrypt it back. Although Hop-to-hop encryption is easier to implement than End-to-end encryption, it presents some disadvantages.
                    Notably, the additional carried operations consume node energy, result in delays during the data transmission, but most importantly, can't ensure data confidentiality at its best: if a node is compromised, an attacker can easily get hold of the decrypted, and therefore insecure, data.</p></li>
                    <li><h3>End-to-end encryption:</h3><p> In this case, no relay or aggregator node should be able to decrypt the data transiting through the network. Sensor nodes encrypt the data such that the ultimate sink node only, or an eventual base-station, can decrypt the data. Because the data stays encrypted during its whole transmission, End-to-end approach enforces security against passive attacks such as <a href="attacks.html">Eavesdropping</a> (listening to the data).

                    <i><p>Although this will not be discussed here, one way to perform Data Aggregation over encrypted data is to use homomorphic encryption algorithms.</p></i></p></li>
                </ul>
            </p>
            <h2>Interaction on data integrity</h2><p> Performing Data Aggregation results in altering the data of every node aggregator - because the data is gathered and then computed by the node. In those conditions, if a node has been compromised during the protocol, the sink node or an eventual base-station have no way of checking the integrity of the aggregated data they receive.</p>
            <h2>Interaction on data source authentication:</h2><p> Source authentication is extremely important when using Data Aggregation Protocol. Its enables a node to ensure the identity of the node it is communicating with. Without source authentication, data may be sent to a node aggregator using several fake node identities, i.e. operating a <a href="attacks_sybil.html">Sybil</a> attack, and result in damaging, or worst, losing the complete integrity of the transmitted data.</p>
            <h2>Interaction on data availability</h2><p> Availability guarantees the survivability of network services against <a href="attacks_dos.html">Denial-of-Service (DoS)</a> attacks. Therefore, it is important for any Data Aggregation protocol to maintain this WSN Security Principle. When using Data Aggregation, every node aggregator is an intermediate node between the source nodes and the sink node or an eventual base-station. Consequently, nodes aggregator availability is more important than other nodes. To prevent any loss of availability, WSNs use node redundancy, i.e., they deploy duplicated nodes aggregator.  If a node aggregator is not available to send the required data to the sink node, then its duplicate will carry out the data transmission.</p>

